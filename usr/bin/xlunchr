#!/bin/bash

#theme_folder
THEME=/usr/share/xlunch/themes/color_circle

#Detect default language (ignoring Country)
get_language=$(locale | grep LANGUAGE | sed -e "s/^LANGUAGE=//" | sed -r 's/(.{2}).*/\1/')
case $get_language in
"en")lang=0;;
"pt")lang=1;;
"es")lang=2;;
esac

#Translations EN=0, PT=1 and ES=2 
shutdown_command=('Turn off' 'Desligar' 'Desligar_ES')
restart_command=('Restart' 'Reiniciar' 'Reiniciar_ES')
suspend_command=('Suspend' 'Suspender' 'Suspender_ES')
lock_command=('Lock' 'Bloquear' 'Bloquear_ES')
exit_command=('Exit' 'Sair' 'Sair_ES')

prompt_desc=('Run: ' 'Executar: ' 'Executar_ES: ')


case $1 in
"--menu")
#begin menu
xlunch --input /etc/xlunch/entries.dsv \
--prompt "${prompt_desc[$lang]}" \
--background $THEME"/bg.png" \
--voidclickterminate \
--iconpadding 20 \
--textpadding 10 \
--iconsize 48 \
--highlight /usr/share/xlunch/icons/base/xlunch_highlight.png \
--font "/usr/share/xlunch/fonts/NotoSans-Regular.ttf/8" \
--button "/usr/share/xlunch/icons/base/xlunch_settings.png;;-30,-30;xlunch_settings" \
--scroll;

#end menu
#######################################################################
;;
"--logout") 
#begin logout


#writing new file
echo "${shutdown_command[$lang]};$THEME/icons/shutdown.png;shutdown
${restart_command[$lang]};$THEME/icons/restart.png;restart
${suspend_command[$lang]};$THEME/icons/suspend.png;suspend
${lock_command[$lang]};$THEME/icons/lock.png;lock
${exit_command[$lang]};$THEME/icons/cancel.png;logout" > /etc/xlunch/logout.dsv

COMMAND=$(
xlunch --input /etc/xlunch/logout.dsv \
--noprompt \
--border auto \
--sideborder auto \
--columns 5 --rows 1 \
--voidclickterminate \
--paddingswap \
--leastmargin 10 \
--hidemissing \
--background $THEME"/bg.png" \
--highlight /usr/share/xlunch/xlunch_highlight.png \
--font "/usr/share/xlunch/fonts/NotoSans-Regular.ttf/8" \
--textpadding 10 \
--iconsize 64 \
--iconpadding 30 \
--outputonly \
--button "/usr/share/xlunch/icons/base/xlunch_settings.png;;-30,-30;xlunch_settings"
)

SND=/usr/share/xlunch/shutdown.wav

if [ "$COMMAND" != "" -a -r $SND ]; then
# blank desktop with smooth effect (if compton still running)
xlunch --noprompt --input /dev/null --bc 111111ff &
# play shutdown sound
aplay $SND
fi

if [ "$COMMAND" = "logout" ]; then
killall Xorg
fi

if [ "$COMMAND" = "restart" ]; then
reboot
fi

if [ "$COMMAND" = "shutdown" ]; then
poweroff
fi

#end logout
#######################################################################
;;
"--config") 
echo "config"
clear; echo "Checking basic tools"; echo
	
	for tool in libimlib2
	do
		if [ $(dpkg-query -W -f='${Status}' $tool 2>/dev/null | grep -c "ok installed") -eq 0 ];then
			echo
			echo "Installing $tool"
			apt-get install --no-install-recommends --yes $tool;
		fi
		echo "$tool is already installed"		
	done
;;
"--quickgen") 
#begin quickgen
ICONTHEME=$(cat ~/.gtkrc-2.0 | grep gtk-icon-theme-name= | sed -e "s/^gtk-icon-theme-name=//" |sed  's/["]//g')

ICONSIZE="$1 128 64 48 32" # icon search in given order
ICONPATH="/usr/share/icons/"$ICONTHEME"/apps/48/"

# $1..$n = dir path with .desktop files
process_directories()
{
echo "" > /etc/xlunch/entries.dsv

while [ "$1" != "" ]; do

for desktop in "$1"/*.desktop; do

Name=
Icon=
Exec=
Hidden=
Terminal=

while read LINE; do
eval $LINE
done <<< $(cat $desktop | egrep '^(Name|Icon|Exec|Hidden|Terminal)=' | sed -r "s/ *%.*//" | sed -r "s/=(.*)/='\\1'/")   #'

if [ "$Hidden" = "true" ]; then
continue
fi

if [ "$Terminal" = "true" ]; then
Exec=$(ls -e $Exec)
fi

if [ "$Icon" = "" ]; then
continue
fi

if [[ $Icon =~ ".png" ]] || [[ $Icon =~ ".xpm" ]]; then
echo "$Name;$Icon;$Exec;" 2>/dev/null 1>>/etc/xlunch/entries.dsv
else
Iconsource=$ICONPATH$Icon".svg"
Icondestiny="/usr/share/xlunch/icons/entries/"$Icon".png"
convert -density 1536 -background none -resize 48x48 $Iconsource $Icondestiny
echo "$Name;$Icondestiny;$Exec;" 2>/dev/null 1>>/etc/xlunch/entries.dsv
fi


done
shift
done
}

process_directories /usr/share/applications  2>/dev/null
#end quickgen
#######################################################################
;;
"--help") echo "help"
;;
*) clear; echo -e "Invalid option! Please use:\n
--menu		Display applications menu
--logout		Display logout screen
--config		Run Config tool
--quickgen		Gen the apps entries file
--help		Help content\n"
exit 1
;;
esac
